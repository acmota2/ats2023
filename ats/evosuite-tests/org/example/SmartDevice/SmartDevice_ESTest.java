/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 22:59:08 GMT 2023
 */

package org.example.SmartDevice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.SmartDevice.SmartBulb;
import org.example.SmartDevice.SmartCamera;
import org.example.SmartDevice.SmartSpeaker;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartDevice_ESTest extends SmartDevice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((String) null, 0, 0);
      String string0 = smartBulb0.toString();
      assertEquals("SmartBulb{id='null', on='false', tone='0', height='0.0'}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((String) null, 0, 0);
      String string0 = smartBulb0.getID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      String string0 = smartBulb0.getID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb("ofD", 0, (-1.0));
      double double0 = smartBulb0.getConsume();
      assertEquals(0.315, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((String) null, 1, 20);
      smartBulb0.setHeight((-862.7534829));
      double double0 = smartBulb0.getConsume();
      assertEquals((-3.9737674145), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("");
      smartSpeaker0.setOn(true);
      smartSpeaker0.clone();
      assertTrue(smartSpeaker0.getOn());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = (SmartCamera)smartCamera0.clone();
      assertEquals("", smartCamera1.getResolution());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      // Undeclared exception!
      try { 
        smartCamera0.getConsume();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, (String) null, 912);
      // Undeclared exception!
      try { 
        smartCamera0.getConsume();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.SmartDevice.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("SmartBulb{", "Hwx_Gm[q:GK+nuV|Mw", 20);
      smartCamera0.setResolution("2");
      // Undeclared exception!
      try { 
        smartCamera0.getConsume();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.example.SmartDevice.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, 0, (String) null, "SmartBulb{");
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      // Undeclared exception!
      try { 
        smartSpeaker0.equals(smartSpeaker1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(", volume='", 0, (-1516.0));
      String string0 = smartBulb0.getID();
      assertEquals(", volume='", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      boolean boolean0 = smartBulb0.getOn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb("k");
      SmartBulb smartBulb1 = new SmartBulb("j");
      boolean boolean0 = smartBulb0.equals(smartBulb1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker();
      smartSpeaker0.turnOn();
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertTrue(smartSpeaker0.getOn());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.turnOff();
      assertFalse(smartSpeaker0.getOn());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.turnOn();
      boolean boolean0 = smartCamera0.getOn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb("k");
      SmartBulb smartBulb1 = new SmartBulb(smartBulb0);
      boolean boolean0 = smartBulb0.equals(smartBulb1);
      assertTrue(boolean0);
  }
}
