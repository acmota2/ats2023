/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 22:58:04 GMT 2023
 */

package org.example.Fornecedor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.Fatura.Fatura;
import org.example.Fornecedor.Fornecedor;
import org.example.Fornecedor.FornecedorTipo1;
import org.example.Fornecedor.FornecedorTipo2;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fornecedor_ESTest extends Fornecedor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      FornecedorTipo1 fornecedorTipo1_1 = new FornecedorTipo1();
      fornecedorTipo1_0.setMultiplicador((-5.3606744F));
      boolean boolean0 = fornecedorTipo1_1.equals(fornecedorTipo1_0);
      assertEquals((-5.3606743812561035), fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("", 1.0, (-2205.756075381269), (-1154.08594165986));
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1(fornecedorTipo2_0);
      fornecedorTipo1_0.setImposto(1955.16F);
      Fornecedor fornecedor0 = fornecedorTipo1_0.clone();
      fornecedorTipo1_0.setImposto(0.0F);
      boolean boolean0 = fornecedorTipo1_0.equals(fornecedor0);
      assertEquals(0.0, fornecedorTipo1_0.getImposto(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("`", (-1.0), (-1.0), (-1.0));
      FornecedorTipo1 fornecedorTipo1_1 = new FornecedorTipo1("", 0.0, 1500.702492, (-387.27714147));
      boolean boolean0 = fornecedorTipo1_0.equals(fornecedorTipo1_1);
      assertEquals((-387.27714147), fornecedorTipo1_1.getMultiplicador(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, fornecedorTipo1_1.getPrecoBase(), 0.01);
      assertEquals(1500.702492, fornecedorTipo1_1.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      fornecedorTipo2_0.setImposto((-784.4951F));
      double double0 = fornecedorTipo2_0.precoDiaPorDispositivo((-1), (-2402.28F));
      assertEquals((-784.4951171875), fornecedorTipo2_0.getImposto(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("", 1.0, (-2205.756075381269), (-1154.08594165986));
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1(fornecedorTipo2_0);
      fornecedorTipo1_0.setImposto(1955.16F);
      double double0 = fornecedorTipo1_0.precoDiaPorDispositivo(3, (-1154.08594165986));
      assertEquals(1955.1600341796875, fornecedorTipo1_0.getImposto(), 0.01);
      assertEquals(681.2893809431625, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("", 1.0, (-2205.756075381269), (-1154.08594165986));
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1(fornecedorTipo2_0);
      fornecedorTipo1_0.setMultiplicador(3);
      double double0 = fornecedorTipo1_0.precoDiaPorDispositivo(3, 681.2893809431625);
      assertEquals(3.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals((-0.8957197156959712), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("", 31.44468939, 0.1, 0.0);
      double double0 = fornecedorTipo2_0.getPrecoBase();
      assertEquals(0.1, fornecedorTipo2_0.getImposto(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals(31.44468939, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("[", (-1.0), (-1.0), (-1.0));
      double double0 = fornecedorTipo1_0.getPrecoBase();
      assertEquals((-1.0), fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals((-1.0), fornecedorTipo1_0.getImposto(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2((String) null, 3119.571945986992, (-2659.301), (-2659.301));
      fornecedorTipo2_0.getNome();
      assertEquals(3119.571945986992, fornecedorTipo2_0.getPrecoBase(), 0.01);
      assertEquals((-2659.301), fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals((-2659.301), fornecedorTipo2_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      fornecedorTipo1_0.getNome();
      assertEquals(0.0, fornecedorTipo1_0.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      assertEquals(0.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      
      fornecedorTipo1_0.setMultiplicador(1.0F);
      double double0 = fornecedorTipo1_0.getMultiplicador();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("7r", (-1.0), (-1.0), (-1.0));
      double double0 = fornecedorTipo2_0.getMultiplicador();
      assertEquals((-1.0), fornecedorTipo2_0.getPrecoBase(), 0.01);
      assertEquals((-1.0), fornecedorTipo2_0.getImposto(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      double double0 = fornecedorTipo1_0.getImposto();
      assertEquals(0.0, fornecedorTipo1_0.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("", 1.0, (-2205.756075381269), (-1154.08594165986));
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1(fornecedorTipo2_0);
      fornecedorTipo1_0.setImposto(1955.16F);
      double double0 = fornecedorTipo1_0.getImposto();
      assertEquals(1955.1600341796875, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      Fatura fatura0 = new Fatura();
      fornecedorTipo2_0.addFatura(0, fatura0);
      fornecedorTipo2_0.getFaturasDoNIF(0);
      assertEquals(0.0, fornecedorTipo2_0.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("d;v95|yFM3", 840.54, 840.54, 840.54);
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2(fornecedorTipo1_0);
      Fornecedor fornecedor0 = fornecedorTipo2_0.clone();
      assertEquals(840.54, fornecedor0.getPrecoBase(), 0.01);
      assertEquals(840.54, fornecedor0.getMultiplicador(), 0.01);
      assertEquals(840.54, fornecedor0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      Fornecedor fornecedor0 = fornecedorTipo1_0.clone();
      assertEquals(0.0, fornecedor0.getPrecoBase(), 0.01);
      assertTrue(fornecedor0.equals((Object)fornecedorTipo1_0));
      assertEquals(0.0, fornecedor0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedor0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("d;v95|yFM3", (-1.0), 840.54, 840.54);
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2(fornecedorTipo1_0);
      Fornecedor fornecedor0 = fornecedorTipo2_0.clone();
      assertEquals(840.54, fornecedor0.getMultiplicador(), 0.01);
      assertEquals((-1.0), fornecedor0.getPrecoBase(), 0.01);
      assertEquals(840.54, fornecedor0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("[", (-1.0), (-1.0), (-1.0));
      Fornecedor fornecedor0 = fornecedorTipo1_0.clone();
      assertEquals((-1.0), fornecedor0.getMultiplicador(), 0.01);
      assertEquals((-1.0), fornecedor0.getPrecoBase(), 0.01);
      assertTrue(fornecedor0.equals((Object)fornecedorTipo1_0));
      assertEquals((-1.0), fornecedorTipo1_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      // Undeclared exception!
      try { 
        fornecedorTipo2_0.addFatura((-906), (Fatura) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1(", data_inicio=", 0.0, 0.0, 1.0);
      double double0 = fornecedorTipo1_0.getPrecoBase();
      assertEquals(1.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      double double0 = fornecedorTipo1_0.getMultiplicador();
      assertEquals(0.0, fornecedorTipo1_0.getImposto(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("^XS=>", 2218.2585906807667, 0.0, 0.0);
      fornecedorTipo1_0.getNome();
      assertEquals(2218.2585906807667, fornecedorTipo1_0.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("[", (-1.0), (-1.0), (-1.0));
      double double0 = fornecedorTipo1_0.getImposto();
      assertEquals((-1.0), fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals((-1.0), fornecedorTipo1_0.getPrecoBase(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      FornecedorTipo2 fornecedorTipo2_1 = new FornecedorTipo2(fornecedorTipo2_0);
      boolean boolean0 = fornecedorTipo2_0.equals(fornecedorTipo2_1);
      assertEquals(0.0, fornecedorTipo2_1.getImposto(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, fornecedorTipo2_1.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo2_1.getMultiplicador(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1((String) null, 0.0, 1144.1057406521, 1144.1057406521);
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2(fornecedorTipo1_0);
      FornecedorTipo2 fornecedorTipo2_1 = new FornecedorTipo2();
      boolean boolean0 = fornecedorTipo2_0.equals(fornecedorTipo2_1);
      assertFalse(boolean0);
      assertEquals(0.0, fornecedorTipo1_0.getPrecoBase(), 0.01);
      assertEquals(1144.1057406521, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals(1144.1057406521, fornecedorTipo2_0.getImposto(), 0.01);
      assertEquals(0.0, fornecedorTipo2_1.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo2_1.getImposto(), 0.01);
      assertEquals(0.0, fornecedorTipo2_1.getMultiplicador(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      FornecedorTipo2 fornecedorTipo2_1 = new FornecedorTipo2();
      fornecedorTipo2_1.setPrecoBase((-31.175735F));
      boolean boolean0 = fornecedorTipo2_0.equals(fornecedorTipo2_1);
      assertEquals((-31.175735473632812), fornecedorTipo2_1.getPrecoBase(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      Fatura fatura0 = new Fatura();
      boolean boolean0 = fornecedorTipo2_0.equals(fatura0);
      assertEquals(0.0, fornecedorTipo2_0.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, fornecedorTipo2_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      boolean boolean0 = fornecedorTipo1_0.equals((Object) null);
      assertEquals(0.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, fornecedorTipo1_0.getImposto(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      boolean boolean0 = fornecedorTipo2_0.equals(fornecedorTipo2_0);
      assertEquals(0.0, fornecedorTipo2_0.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getImposto(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      Fatura fatura0 = new Fatura();
      fornecedorTipo1_0.addFatura((-12), fatura0);
      boolean boolean0 = fornecedorTipo1_0.TemFaturas();
      assertEquals(0.0, fornecedorTipo1_0.getPrecoBase(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      boolean boolean0 = fornecedorTipo2_0.TemFaturas();
      assertFalse(boolean0);
      assertEquals(0.0, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getImposto(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      Fatura fatura0 = new Fatura();
      fornecedorTipo1_0.addFatura((-12), fatura0);
      fornecedorTipo1_0.getFaturas();
      assertEquals(0.0, fornecedorTipo1_0.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo1_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      Map<Integer, List<Fatura>> map0 = fornecedorTipo2_0.getFaturas();
      Fatura fatura0 = new Fatura();
      fornecedorTipo2_0.addFatura((-775), fatura0);
      fornecedorTipo2_0.setFaturas(map0);
      assertEquals(0.0, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getImposto(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getPrecoBase(), 0.01);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      fornecedorTipo2_0.setMultiplicador((-1980.4724F));
      FornecedorTipo2 fornecedorTipo2_1 = new FornecedorTipo2();
      boolean boolean0 = fornecedorTipo2_0.equals(fornecedorTipo2_1);
      assertEquals((-1980.472412109375), fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      fornecedorTipo2_0.hashCode();
      assertEquals(0.0, fornecedorTipo2_0.getPrecoBase(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals(0.0, fornecedorTipo2_0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      // Undeclared exception!
      try { 
        fornecedorTipo2_0.getFaturasDoNIF(1002);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<Integer, List<Fatura>> hashMap0 = new HashMap<Integer, List<Fatura>>();
      FornecedorTipo2 fornecedorTipo2_0 = null;
      try {
        fornecedorTipo2_0 = new FornecedorTipo2("FQ8I\"o|Y%EYZKWDh6", 0.0, 0.0, 0.0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("d;v95|yFM3", 840.54, 840.54, 840.54);
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2(fornecedorTipo1_0);
      FornecedorTipo2 fornecedorTipo2_1 = new FornecedorTipo2("", 840.54, 840.54, 840.54);
      boolean boolean0 = fornecedorTipo2_0.equals(fornecedorTipo2_1);
      assertEquals(840.54, fornecedorTipo2_0.getPrecoBase(), 0.01);
      assertEquals(840.54, fornecedorTipo2_1.getPrecoBase(), 0.01);
      assertEquals(840.54, fornecedorTipo2_1.getImposto(), 0.01);
      assertEquals(840.54, fornecedorTipo2_1.getMultiplicador(), 0.01);
      assertFalse(boolean0);
      assertEquals(840.54, fornecedorTipo2_0.getMultiplicador(), 0.01);
      assertEquals(840.54, fornecedorTipo2_0.getImposto(), 0.01);
  }
}
