/*
 * This file was automatically generated by EvoSuite
 * Thu May 04 15:56:47 GMT 2023
 */

package org.example.Fornecedor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.Fatura.Fatura;
import org.example.Fornecedor.Fornecedor;
import org.example.Fornecedor.FornecedorTipo2;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FornecedorTipo2_ESTest extends FornecedorTipo2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("", 0.0, (-1284.09359529), 0.0);
      double double0 = fornecedorTipo2_0.precoDiaPorDispositivo(0, 0.0);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("org.example.Fornecedor.FornecedorTipo1", 1033.66555242, 0.1, 0.1);
      double double0 = fornecedorTipo2_0.precoDiaPorDispositivo((-453), 1033.66555242);
      assertEquals(1068464.474259744, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("6/[!", 0.1, 1.0, (-1.0));
      double double0 = fornecedorTipo2_0.precoDiaPorDispositivo(125, 0.1);
      assertEquals((-0.010000000000000002), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("org.example.Fornecedor.FornecedorTipo2", (-4851.046640287), (-726.37584648), (-726.37584648));
      Fornecedor fornecedor0 = fornecedorTipo2_0.clone();
      assertNotSame(fornecedor0, fornecedorTipo2_0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      Fornecedor fornecedor0 = fornecedorTipo2_0.clone();
      assertEquals(0.0, fornecedor0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = null;
      try {
        fornecedorTipo2_0 = new FornecedorTipo2((Fornecedor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("org.example.Fornecedor.FornecedorTipo1", 1033.66555242, 0.1, 0.1);
      FornecedorTipo2 fornecedorTipo2_1 = new FornecedorTipo2(fornecedorTipo2_0);
      assertEquals(0.1, fornecedorTipo2_1.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HashMap<Integer, List<Fatura>> hashMap0 = new HashMap<Integer, List<Fatura>>();
      FornecedorTipo2 fornecedorTipo2_0 = null;
      try {
        fornecedorTipo2_0 = new FornecedorTipo2("0+", 319864.7224289611, 565.5658427, 319864.7224289611, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("0+", 565.5658427, 565.5658427, 565.5658427);
      Fornecedor fornecedor0 = fornecedorTipo2_0.clone();
      assertEquals(565.5658427, fornecedor0.getMultiplicador(), 0.01);
  }
}
