/*
 * This file was automatically generated by EvoSuite
 * Thu May 04 15:56:06 GMT 2023
 */

package org.example.Main;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.StreamCorruptedException;
import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.example.Main.Controller;
import org.example.Sistema.Sistema;
import org.example.SmartDevice.SmartBulb;
import org.example.SmartDevice.SmartSpeaker;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Controller controller0 = new Controller();
      LocalDate localDate0 = MockLocalDate.ofYearDay(0, 350);
      Period period0 = Period.ofMonths((-3063));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate1 = MockIsoChronology.dateNow(isoChronology0);
      // Undeclared exception!
      try { 
        controller0.executaQuery1(localDate0, localDate1);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", (-1151.0219236166624), (-1151.0219236166624), (-1151.0219236166624));
      controller0.InsereCasa("java.util.ArrayList@0000000005", (-1), "");
      controller0.addRoom((-1), "");
      SmartBulb smartBulb0 = new SmartBulb("java.util.ArrayList@0000000005");
      controller0.addDevice((-1), "", smartBulb0);
      assertEquals(2, SmartBulb.WARM);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("tN~OabR40bJq|;", 0.0, 2160.9846, 2160.9846);
      controller0.InsereFornecedor("tN~OabR40bJq|;", 0.0, 0.0, (-3198.6289));
      assertTrue(controller0.Precondition2());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", (-1151.0219236166624), (-1151.0219236166624), (-1151.0219236166624));
      String string0 = controller0.executaQuery3("");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor((String) null, 349.360031314, (-2307.56364), (-993.7907520581));
      String string0 = controller0.executaQuery2();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("()x", 1546.5253285442602, 1546.5253285442602, 1546.5253285442602);
      String string0 = controller0.executaQuery2();
      assertEquals("()x", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", (-1150.4850471209504), (-1150.4850471209504), (-1150.4850471209504));
      controller0.InsereCasa("java.util.ArrayList@0000000005", (-12), "");
      LocalDate localDate0 = MockLocalDate.now();
      controller0.simulacao(localDate0);
      String string0 = controller0.executaQuery1(localDate0, localDate0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Controller controller0 = new Controller();
      // Undeclared exception!
      try { 
        controller0.simulacao((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Controller controller0 = new Controller();
      // Undeclared exception!
      try { 
        controller0.setSistema((Sistema) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Main.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Controller controller0 = new Controller();
      // Undeclared exception!
      try { 
        controller0.guardaEstado((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Controller controller0 = new Controller();
      try { 
        controller0.guardaEstado("O\"!S=?|\"ok");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", (-1166.3144300055967), 0.0, 0.0);
      controller0.InsereCasa((String) null, (-1), "");
      // Undeclared exception!
      try { 
        controller0.executaQuery4((LocalDate) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", 0.0, 0.0, 0.0);
      controller0.InsereCasa("69.>%UmjV", 4114, "");
      // Undeclared exception!
      try { 
        controller0.executaQuery1((LocalDate) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Controller controller0 = new Controller();
      // Undeclared exception!
      try { 
        controller0.carregaEstado((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Controller controller0 = new Controller();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("[]");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "u*\"eO;7K~");
      try { 
        controller0.carregaEstado("[]");
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 752A2265
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Controller controller0 = new Controller();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", brand='");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "h{=Hvi9<uv-io3a4VE");
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        controller0.carregaEstado(", brand='");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Controller controller0 = new Controller();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("[]");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[]");
      try { 
        controller0.carregaEstado("[]");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", (-1151.0219236166624), (-1151.0219236166624), (-1151.0219236166624));
      controller0.InsereCasa("java.util.ArrayList@0000000005", (-1), "");
      controller0.addRoom((-1), "");
      try { 
        controller0.addRoom((-1), "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Esta Divis\u00E3o j\u00E1 existe!
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Controller controller0 = new Controller();
      assertFalse(controller0.Precondition2());
      
      controller0.InsereFornecedor("", 0.0, 0.0, 0.0);
      boolean boolean0 = controller0.Precondition2();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Controller controller0 = new Controller();
      boolean boolean0 = controller0.Precondition2();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", 0.0, 0.0, 0.0);
      controller0.InsereCasa("", (-12), "");
      controller0.setFornecedorEm((-12), "");
      assertTrue(controller0.Precondition4());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Controller controller0 = new Controller();
      try { 
        controller0.setFornecedorEm((-95), "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // N\u00E3o \u00E9 um fornecedor v\u00E1lido
         //
         verifyException("org.example.Main.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", 0.0, 0.0, 0.0);
      try { 
        controller0.setFornecedorEm((-12), "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // N\u00E3o \u00E9 um NIF v\u00E1lido
         //
         verifyException("org.example.Main.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", 0.0, 0.0, 0.0);
      controller0.InsereCasa("", (-12), "");
      LocalDate localDate0 = controller0.getTime();
      controller0.simulacao(localDate0);
      boolean boolean0 = controller0.Precondition6();
      assertTrue(controller0.Precondition4());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Controller controller0 = new Controller();
      boolean boolean0 = controller0.Precondition6();
      assertFalse(boolean0);
      assertFalse(controller0.Precondition2());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereFornecedor("", 0.0, 0.0, 0.0);
      controller0.InsereCasa("", (-12), "");
      boolean boolean0 = controller0.Precondition4();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Controller controller0 = new Controller();
      assertFalse(controller0.Precondition2());
      
      controller0.InsereFornecedor("", 0.0, 0.0, 0.0);
      boolean boolean0 = controller0.Precondition4();
      assertTrue(controller0.Precondition2());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Controller controller0 = new Controller();
      assertFalse(controller0.Precondition2());
      
      controller0.InsereFornecedor("", 0.0, 0.0, 0.0);
      boolean boolean0 = controller0.Precondition6();
      assertTrue(controller0.Precondition2());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Controller controller0 = new Controller();
      boolean boolean0 = controller0.Precondition4();
      assertFalse(boolean0);
      assertFalse(controller0.Precondition2());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Controller controller0 = new Controller();
      controller0.InsereCasa("", (-12), "");
      assertFalse(controller0.Precondition4());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Controller controller0 = new Controller();
      try { 
        controller0.guardaEstado("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Controller controller0 = new Controller();
      String string0 = controller0.executaQuery2();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Controller controller0 = new Controller();
      Sistema sistema0 = new Sistema();
      controller0.setSistema(sistema0);
      assertEquals(0, sistema0.getNrCasasInteligentes());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Controller controller0 = new Controller();
      // Undeclared exception!
      try { 
        controller0.addRoom((-12), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Sistema.Sistema", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Controller controller0 = new Controller();
      String string0 = controller0.getSistema();
      assertEquals("Sistema {\nlistaCasas= \n{}\nlistaFornecedores= \n{}\n}", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Controller controller0 = new Controller();
      LocalDate localDate0 = controller0.getTime();
      String string0 = controller0.executaQuery4((LocalDate) null, localDate0);
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Controller controller0 = new Controller();
      try { 
        controller0.executaQuery3(" N\u00E3o foi poss\u00EDvel adiSiona a EmpresaS");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fornecedor n\u00E3o existente
         //
         verifyException("org.example.Sistema.Sistema", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Controller controller0 = new Controller();
      try { 
        controller0.carregaEstado(", brand='");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Controller controller0 = new Controller();
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("Sistema {\nlistaCasas= \n{}\nlistaFornecedores= \n{}\n}");
      // Undeclared exception!
      try { 
        controller0.addDevice(20, "Sistema {\nlistaCasas= \n{}\nlistaFornecedores= \n{}\n}", smartSpeaker0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Sistema.Sistema", e);
      }
  }
}
