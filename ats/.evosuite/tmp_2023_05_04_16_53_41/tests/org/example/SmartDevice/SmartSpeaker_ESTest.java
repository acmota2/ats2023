/*
 * This file was automatically generated by EvoSuite
 * Thu May 04 15:56:45 GMT 2023
 */

package org.example.SmartDevice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.SmartDevice.SmartSpeaker;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartSpeaker_ESTest extends SmartSpeaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      smartSpeaker1.volumeUp();
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertEquals(14.399999999999999, smartSpeaker1.getConsume(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      smartSpeaker0.volumeUp();
      assertEquals(1, smartSpeaker0.getVolume());
      
      smartSpeaker0.volumeDown();
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      smartSpeaker0.volumeUp();
      int int0 = smartSpeaker0.getVolume();
      assertEquals(14.399999999999999, smartSpeaker0.getConsume(), 0.01);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("&E%fbPP`", (-2034), "&E%fbPP`", "&E%fbPP`");
      smartSpeaker0.getChannel();
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("3RCr+mZJ]3)8he");
      smartSpeaker0.getChannel();
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      smartSpeaker0.volumeUp();
      smartSpeaker0.clone();
      assertEquals(14.399999999999999, smartSpeaker0.getConsume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      smartSpeaker0.turnOn();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals(0, smartSpeaker1.getVolume());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = null;
      try {
        smartSpeaker0 = new SmartSpeaker((SmartSpeaker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.SmartDevice.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      assertEquals(0.0072, smartSpeaker1.getConsume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      int int0 = smartSpeaker0.getVolume();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      String string0 = smartSpeaker0.getChannel();
      assertNull(string0);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      smartSpeaker0.volumeUp();
      double double0 = smartSpeaker0.getConsume();
      assertEquals(1, smartSpeaker0.getVolume());
      assertEquals(14.399999999999999, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("&E%fbPP`", (-2034), "&E%fbPP`", "&E%fbPP`");
      double double0 = smartSpeaker0.getConsume();
      assertEquals(0.0072, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker("", 830, "", "k?~Zoch'X6)>");
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(0, smartSpeaker1.getVolume());
      assertFalse(boolean0);
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
      assertEquals("", smartSpeaker1.getChannel());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker("");
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      
      smartSpeaker1.setChannel("3");
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker();
      smartSpeaker0.turnOn();
      smartSpeaker1.turnOn();
      smartSpeaker1.volumeUp();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(1, smartSpeaker1.getVolume());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertEquals(0.0072, smartSpeaker1.getConsume(), 0.01);
      assertTrue(smartSpeaker0.equals((Object)smartSpeaker1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-411), (String) null, "");
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      // Undeclared exception!
      try { 
        smartSpeaker0.equals(smartSpeaker1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.SmartDevice.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, 0, ", brand='", "2k!ID|jfy2onG_s|_`D");
      boolean boolean0 = smartSpeaker0.equals((Object) null);
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
      assertEquals(", brand='", smartSpeaker0.getChannel());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("&E%fbPP`", (-2034), "&E%fbPP`", "&E%fbPP`");
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker0);
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("&E%fbPP`", (-2034), "&E%fbPP`", "&E%fbPP`");
      boolean boolean0 = smartSpeaker0.equals("&E%fbPP`");
      assertFalse(boolean0);
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("g<7PrYXyZN+Yy9R`K", 20, "g<7PrYXyZN+Yy9R`K", "g<7PrYXyZN+Yy9R`K");
      smartSpeaker0.volumeDown();
      assertEquals(19, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("&E%fbPP`", (-2034), "&E%fbPP`", "&E%fbPP`");
      smartSpeaker0.volumeDown();
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("g<7PrYXyZN+Yy9R`K", 20, "g<7PrYXyZN+Yy9R`K", "g<7PrYXyZN+Yy9R`K");
      smartSpeaker0.volumeUp();
      assertEquals(0.72, smartSpeaker0.getConsume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("&E%fbPP`", (-2034), "&E%fbPP`", "&E%fbPP`");
      String string0 = smartSpeaker0.toString();
      assertEquals("SmartSpeaker {id='&E%fbPP`', on='false', volume='0', channel='&E%fbPP`', brand='&E%fbPP`'}", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      
      smartSpeaker1.turnOn();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertFalse(boolean0);
  }
}
