* Starting client
* Connecting to master process on port 3319
* Analyzing classpath: 
  - /home/acmota2/repos/ats2023/ats2023/target/classes
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/charsets.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/cldrdata.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/dnsns.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/jaccess.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/jfxrt.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/localedata.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/nashorn.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/sunec.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/sunjce_provider.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/sunpkcs11.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/ext/zipfs.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/jce.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/jfr.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/jfxswt.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/jsse.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/management-agent.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/resources.jar
  - /home/acmota2/.jdks/corretto-1.8.0_372/jre/lib/rt.jar
  - /home/acmota2/repos/ats2023/ats2023/target/test-classes
  - /home/acmota2/repos/ats2023/ats2023/target/classes
  - /home/acmota2/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar
  - /home/acmota2/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar
  - /home/acmota2/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar
  - /home/acmota2/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar
  - /home/acmota2/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar
  - /home/acmota2/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar
  - /home/acmota2/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar
  - /home/acmota2/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar
* Finished analyzing classpath
* Generating tests for class org.example.SmartDevice.SmartDevice
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
[MASTER] 16:53:48.359 [pool-2-thread-1] WARN  TestSuiteSerialization - Cannot load tests because file does not exist: /home/acmota2/repos/ats2023/ats2023/.evosuite/evosuite-seeds/org.example.SmartDevice.SmartDevice.seed
* Loaded 0 tests from /home/acmota2/repos/ats2023/ats2023/.evosuite/evosuite-seeds/org.example.SmartDevice.SmartDevice.seed
* Total number of test goals: 
  - Line 31
  - Branch 20
  - Exception 0
  - MutationFactory 32
  - Output 16
  - Method 9
  - MethodNoException 9
  - CBranchFitnessFactory 20
* Using seed 1683215623116
* Starting evolution
* Search finished after 107s and 3510 generations, 862087 statements, best individual has fitness: 29.99999996759425
* Writing sequences to pool
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 31
* Number of covered goals: 27
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 20
* Number of covered goals: 17
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 32
* Number of covered goals: 29
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 75%
* Total number of goals: 16
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 20
* Number of covered goals: 5
* Generated 21 tests with total length 49
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
* Writing JUnit test case 'SmartDevice_ESTest' to /home/acmota2/repos/ats2023/ats2023/.evosuite/tmp_2023_05_04_16_53_41/tests
* Done!

