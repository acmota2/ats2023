/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 16:03:40 GMT 2023
 */

package org.example.Fornecedor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.Fatura.Fatura;
import org.example.Fornecedor.Fornecedor;
import org.example.Fornecedor.FornecedorTipo1;
import org.example.Fornecedor.FornecedorTipo2;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FornecedorTipo1_ESTest extends FornecedorTipo1_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1((String) null, (-1.0), (-1.0), 1756.93);
      double double0 = fornecedorTipo1_0.precoDiaPorDispositivo(572, 1756.93);
      assertEquals(3086803.0249, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1((String) null, 0.0, 0.1, 0.1);
      double double0 = fornecedorTipo1_0.precoDiaPorDispositivo(0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("", (-564.20281195), 525.042304, 525.042304);
      fornecedorTipo1_0.setMultiplicador((-297.956F));
      double double0 = fornecedorTipo1_0.precoDiaPorDispositivo(10, 10);
      assertEquals(3202.8662920312745, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      fornecedorTipo1_0.setPrecoBase(2.0F);
      double double0 = fornecedorTipo1_0.precoDiaPorDispositivo(0, 3434.94125074);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("", (-564.20281195), 525.042304, 525.042304);
      Fornecedor fornecedor0 = fornecedorTipo1_0.clone();
      assertEquals(525.042304, fornecedor0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("", 0.0, (-1077.88618423), (-1077.88618423));
      Fornecedor fornecedor0 = fornecedorTipo1_0.clone();
      assertNotSame(fornecedor0, fornecedorTipo1_0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1(fornecedorTipo2_0);
      assertEquals(0.0, fornecedorTipo1_0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1((String) null, 0.0, 0.0, 0.0);
      double double0 = fornecedorTipo1_0.precoDiaPorDispositivo(631, 0.0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1("90_8Z@p6\"ZXX_P{7S%P", 3.2983538, 3.2983538, 14.0);
      Fornecedor fornecedor0 = fornecedorTipo1_0.clone();
      assertEquals(14.0, fornecedor0.getMultiplicador(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = new FornecedorTipo1();
      Fornecedor fornecedor0 = fornecedorTipo1_0.clone();
      assertEquals(0.0, fornecedor0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FornecedorTipo1 fornecedorTipo1_0 = null;
      try {
        fornecedorTipo1_0 = new FornecedorTipo1((Fornecedor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<Integer, List<Fatura>> hashMap0 = new HashMap<Integer, List<Fatura>>();
      FornecedorTipo1 fornecedorTipo1_0 = null;
      try {
        fornecedorTipo1_0 = new FornecedorTipo1(" !nP", 1789.38779501, 1789.38779501, 1789.38779501, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }
}
