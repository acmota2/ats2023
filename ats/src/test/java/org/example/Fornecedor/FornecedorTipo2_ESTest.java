/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 17:47:41 GMT 2023
 */

package org.example.Fornecedor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.example.Fatura.Fatura;
import org.example.Fornecedor.Fornecedor;
import org.example.Fornecedor.FornecedorTipo2;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FornecedorTipo2_ESTest extends FornecedorTipo2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2(":6m?}2\"/:Nv0b+a", (-1649.124), (-1649.124), (-1452.600454));
      double double0 = fornecedorTipo2_0.precoDiaPorDispositivo((-2626), 0.0);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("org.example.Fornecedor.FornecedorTipo2", 492.49983563350884, 492.49983563350884, 492.49983563350884);
      double double0 = fornecedorTipo2_0.precoDiaPorDispositivo(0, 492.49983563350884);
      assertEquals(242556.08809903322, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("org.example.Fornecedor.FornecedorTipo2", (-1604.5684572666325), (-1604.5684572666325), (-1604.5684572666325));
      double double0 = fornecedorTipo2_0.precoDiaPorDispositivo(1009, 1.0);
      assertEquals((-1604.5684572666325), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("", 0.1, 0.1, 1947.0651350709666);
      Fornecedor fornecedor0 = fornecedorTipo2_0.clone();
      assertNotSame(fornecedorTipo2_0, fornecedor0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("4cUn", (-2433.552501585272), (-2433.552501585272), (-2433.552501585272));
      Fornecedor fornecedor0 = fornecedorTipo2_0.clone();
      assertTrue(fornecedor0.equals((Object)fornecedorTipo2_0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("w", 0.0, 0.0, 1363.0);
      Fatura fatura0 = mock(Fatura.class, new ViolatedAssumptionAnswer());
      doReturn((Fatura) null).when(fatura0).clone();
      fornecedorTipo2_0.addFatura(1129, fatura0);
      // Undeclared exception!
      try { 
        fornecedorTipo2_0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$3$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = null;
      try {
        fornecedorTipo2_0 = new FornecedorTipo2((Fornecedor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      Fornecedor fornecedor0 = fornecedorTipo2_0.clone();
      assertNotSame(fornecedor0, fornecedorTipo2_0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2("org.example.Fornecedor.FornecedorTipo2", 492.49983563350884, 492.49983563350884, 492.49983563350884);
      FornecedorTipo2 fornecedorTipo2_1 = new FornecedorTipo2(fornecedorTipo2_0);
      assertEquals(492.49983563350884, fornecedorTipo2_1.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FornecedorTipo2 fornecedorTipo2_0 = new FornecedorTipo2();
      Map<Integer, List<Fatura>> map0 = fornecedorTipo2_0.getFaturas();
      FornecedorTipo2 fornecedorTipo2_1 = null;
      try {
        fornecedorTipo2_1 = new FornecedorTipo2("", 0.0, 0.0, 0.0, map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Fornecedor.Fornecedor", e);
      }
  }
}
