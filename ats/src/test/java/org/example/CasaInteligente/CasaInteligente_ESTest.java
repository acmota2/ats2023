/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 22:55:54 GMT 2023
 */

package org.example.CasaInteligente;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.CasaInteligente.CasaInteligente;
import org.example.SmartDevice.SmartBulb;
import org.example.SmartDevice.SmartCamera;
import org.example.SmartDevice.SmartDevice;
import org.example.SmartDevice.SmartSpeaker;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CasaInteligente_ESTest extends CasaInteligente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setNIF(5);
      CasaInteligente casaInteligente1 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals(5, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("");
      casaInteligente0.addToRoom("", "");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb("l>^Tx?m2fo3");
      smartBulb0.setOn(true);
      casaInteligente0.addDevice(smartBulb0);
      casaInteligente0.getNrHorasDispositivoson();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Esta Divis\u00E3o j\u00E1 existe!", (-4012), "S>-,rA=lUnW");
      SmartBulb smartBulb0 = new SmartBulb("Esta Divis\u00E3o j\u00E1 existe!", (-4012), (-4012));
      smartBulb0.turnOn();
      casaInteligente0.addDevice(smartBulb0);
      casaInteligente0.getNrHorasDispositivoson();
      assertEquals("Esta Divis\u00E3o j\u00E1 existe!", casaInteligente0.getNome_proprietario());
      assertEquals((-4012), casaInteligente0.getNIF());
      assertEquals("S>-,rA=lUnW", casaInteligente0.getNomeFornecedor());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1452), "");
      SmartCamera smartCamera0 = new SmartCamera("", "", (-1452));
      casaInteligente0.addDevice(smartCamera0);
      casaInteligente0.getNrDispositivos();
      assertEquals((-1452), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setNome_proprietario((String) null);
      casaInteligente0.getNome_proprietario();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setNome_proprietario("l>^Tx?m2fo3");
      casaInteligente0.getNome_proprietario();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 1138, (String) null);
      casaInteligente0.getNomeFornecedor();
      assertEquals(1138, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("2R@T@y(Nrz", 0, "2R@T@y(Nrz");
      casaInteligente0.getNomeFornecedor();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 125, (String) null);
      int int0 = casaInteligente0.getNIF();
      assertEquals(125, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Esta Divis\u00E3o j\u00E1 existe!", (-4012), "S>-,rA=lUnW");
      int int0 = casaInteligente0.getNIF();
      assertEquals("Esta Divis\u00E3o j\u00E1 existe!", casaInteligente0.getNome_proprietario());
      assertEquals((-4012), int0);
      assertEquals("S>-,rA=lUnW", casaInteligente0.getNomeFornecedor());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1452), "");
      HashMap<String, SmartDevice> hashMap0 = casaInteligente0.getDevices();
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.turnOn();
      hashMap0.put("XP2O:l|wc=F7XPQk,", smartSpeaker0);
      casaInteligente0.setDevices(hashMap0);
      casaInteligente0.getDevice("");
      assertEquals((-1452), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("M/r[oDS>nJ", 20, ", volume='");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals("M/r[oDS>nJ", casaInteligente1.getNome_proprietario());
      assertEquals(", volume='", casaInteligente1.getNomeFornecedor());
      assertEquals(20, casaInteligente1.getNIF());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Esta Divis\u00E3o j\u00E1 existe!", (-4012), "S>-,rA=lUnW");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals("Esta Divis\u00E3o j\u00E1 existe!", casaInteligente1.getNome_proprietario());
      assertEquals((-4012), casaInteligente1.getNIF());
      assertEquals("S>-,rA=lUnW", casaInteligente1.getNomeFornecedor());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", 630, "");
      // Undeclared exception!
      try { 
        casaInteligente0.setLocations((Map<String, Set<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setDevices((Map<String, SmartDevice>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1452), "");
      // Undeclared exception!
      try { 
        casaInteligente0.roomHasDevice("u5Hl$", ".^+x}[uKrZYXLg<mW:U");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Dd\"9s:;7K3zP4!$#", 1257, "Dd\"9s:;7K3zP4!$#");
      HashMap<String, SmartDevice> hashMap0 = casaInteligente0.getDevices();
      SmartCamera smartCamera0 = new SmartCamera("Dd\"9s:;7K3zP4!$#", "Dd\"9s:;7K3zP4!$#", 1257);
      hashMap0.put("Dd\"9s:;7K3zP4!$#", smartCamera0);
      casaInteligente0.setDevices(hashMap0);
      casaInteligente0.setDeviceOn("Dd\"9s:;7K3zP4!$#");
      // Undeclared exception!
      try { 
        casaInteligente0.getNrHorasDispositivoson();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "CasaInteligente{Nome Propriet\u00E1rio='?>]NT\\uC', NIF = '20', Fornecedor = '?>]NT\\uC', devices='{=SmartCamera{id='', on='false', resolution='', size='0'}}', locations='{}'}\n";
      CasaInteligente casaInteligente0 = new CasaInteligente(string0, (-1635), (String) null);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      // Undeclared exception!
      try { 
        casaInteligente1.equals(casaInteligente0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("_&[!5l`fl", (-137), (String) null);
      // Undeclared exception!
      try { 
        casaInteligente0.addDevice((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1452), "");
      casaInteligente0.hasRoom("u5Hl$");
      assertEquals((-1452), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom(">x7!UoB@at<X<!@GX=n");
      boolean boolean0 = casaInteligente0.hasRoom(">x7!UoB@at<X<!@GX=n");
      assertEquals(0, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("-#c");
      casaInteligente0.addDevice(smartSpeaker0);
      casaInteligente0.getDevices();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getNomeFornecedor();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      HashMap<String, Set<String>> hashMap0 = casaInteligente0.getLocations();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      hashMap0.put("!['F-UBq8FXzV/{}6", linkedHashSet0);
      assertTrue(casaInteligente0.equals((Object)casaInteligente1));
      
      casaInteligente1.setLocations(hashMap0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = new CasaInteligente();
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      casaInteligente0.setNomeFornecedor("+");
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setNIF((-24));
      CasaInteligente casaInteligente1 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals((-24), casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(",kForn+c?1dor  '", 125, ",kForn+c?1dor  '");
      CasaInteligente casaInteligente1 = new CasaInteligente("i<*'a3(+", 125, "i[*'a3(+");
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals("i<*'a3(+", casaInteligente1.getNome_proprietario());
      assertEquals(125, casaInteligente1.getNIF());
      assertEquals("i[*'a3(+", casaInteligente1.getNomeFornecedor());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals(0, casaInteligente1.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals(casaInteligente0);
      assertTrue(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals("l>^Tx?m2fo3");
      assertFalse(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, Set<String>> hashMap0 = casaInteligente0.getLocations();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add((String) null);
      hashMap0.put((String) null, linkedHashSet0);
      casaInteligente0.setLocations(hashMap0);
      boolean boolean0 = casaInteligente0.roomHasDevice((String) null, (String) null);
      assertEquals(0, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("slZm rlsouin!'");
      boolean boolean0 = casaInteligente0.roomHasDevice("slZm rlsouin!'", "slZm rlsouin!'");
      assertEquals(0, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("SmartSpeaker {id=',gw<A{#8w', on='false', volume='5', channel=',gw<A{#8w', brand=',gw<A{#8w'}");
      try { 
        casaInteligente0.addRoom("SmartSpeaker {id=',gw<A{#8w', on='false', volume='5', channel=',gw<A{#8w', brand=',gw<A{#8w'}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Esta Divis\u00E3o j\u00E1 existe!
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(",gw<A{#8w", 5, ",gw<A{#8w", ",gw<A{#8w");
      casaInteligente0.addDevice(smartSpeaker0);
      casaInteligente0.setAllOn(false);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(",gw<A{#8w", 5, ",gw<A{#8w", ",gw<A{#8w");
      casaInteligente0.addDevice(smartSpeaker0);
      casaInteligente0.setOn(",gw<A{#8w", false);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setOn("id='", true);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1452), "");
      HashMap<String, SmartDevice> hashMap0 = casaInteligente0.getDevices();
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      hashMap0.put("XP2O:l|wc=F7XPQk,", smartSpeaker0);
      casaInteligente0.setDevices(hashMap0);
      casaInteligente0.getDevice("");
      assertEquals((-1452), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getDevice(">x7!UoB@at<X<!@GX=n");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1452), "");
      SmartCamera smartCamera0 = new SmartCamera("", "", (-1452));
      casaInteligente0.addDevice(smartCamera0);
      boolean boolean0 = casaInteligente0.existsDevice("");
      assertEquals((-1452), casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.existsDevice(", locations='");
      assertFalse(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("SmartSpeaker {");
      casaInteligente0.getLocations();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      SmartBulb smartBulb0 = new SmartBulb((String) null, (-1321), (-1321));
      hashMap0.put("0 FD[%.>(ctcZ#w{", smartBulb0);
      casaInteligente0.setDevices(hashMap0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertFalse(boolean0);
      assertEquals(0, casaInteligente1.getNIF());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.addToRoom("XG(RIDvL&", "XG(RIDvL&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getNome_proprietario();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      int int0 = casaInteligente0.getNIF();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setDeviceOn(", NIF = '");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(",kForn+c?1dor  '", 125, ",kForn+c?1dor  '");
      String string0 = casaInteligente0.toString();
      assertEquals("CasaInteligente{Nome Propriet\u00E1rio=',kForn+c?1dor  '', NIF = '125', Fornecedor = ',kForn+c?1dor  '', devices='{}', locations='{}'}\n", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("_&[!5l`fl", (-137), (String) null);
      casaInteligente0.getNrHorasDispositivoson();
      assertEquals((-137), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(0, casaInteligente1.getNIF());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getNrDispositivos();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CasaInteligente casaInteligente0 = null;
      try {
        casaInteligente0 = new CasaInteligente((CasaInteligente) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }
}
