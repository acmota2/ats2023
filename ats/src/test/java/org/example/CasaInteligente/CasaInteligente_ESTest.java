/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 17:45:20 GMT 2023
 */

package org.example.CasaInteligente;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.CasaInteligente.CasaInteligente;
import org.example.SmartDevice.SmartBulb;
import org.example.SmartDevice.SmartCamera;
import org.example.SmartDevice.SmartDevice;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CasaInteligente_ESTest extends CasaInteligente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      casaInteligente0.setNIF((-3023));
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals((-3023), casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb("je!-$XM>G^Pe*q(6mc", (-23), (-23));
      casaInteligente0.addDevice(smartBulb0);
      casaInteligente0.setDeviceOn("je!-$XM>G^Pe*q(6mc");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = casaInteligente0.getDevices();
      SmartBulb smartBulb0 = new SmartBulb("@A`B[", (-1166), (-13.2973922));
      smartBulb0.setOn(true);
      hashMap0.put("@A`B[", smartBulb0);
      casaInteligente0.setDevices(hashMap0);
      double double0 = casaInteligente0.getNrHorasDispositivoson();
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals((-23.066486961), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = casaInteligente0.getDevices();
      SmartBulb smartBulb0 = new SmartBulb("@A`B[", (-1166), (-13.2973922));
      hashMap0.put("@A`B[", smartBulb0);
      casaInteligente0.setDevices(hashMap0);
      int int0 = casaInteligente0.getNrDispositivos();
      assertEquals(1, int0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", 1168, "");
      casaInteligente0.setNome_proprietario("C3LAZk]A2b;}&aHgAC");
      casaInteligente0.getNome_proprietario();
      assertEquals(1168, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getNome_proprietario();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, (String) null);
      String string0 = casaInteligente0.getNomeFornecedor();
      assertEquals(0, casaInteligente0.getNIF());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("8UN2zOoIHaA#>Xf", (-30), "8UN2zOoIHaA#>Xf");
      casaInteligente0.getNomeFornecedor();
      assertEquals((-30), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", 1168, "");
      int int0 = casaInteligente0.getNIF();
      assertEquals(1168, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("g=/|^n9)BRTI4+da%!", (-1397), "w><?F0Z");
      int int0 = casaInteligente0.getNIF();
      assertEquals((-1397), int0);
      assertEquals("g=/|^n9)BRTI4+da%!", casaInteligente0.getNome_proprietario());
      assertEquals("w><?F0Z", casaInteligente0.getNomeFornecedor());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.turnOn();
      casaInteligente0.addDevice(smartBulb0);
      SmartDevice smartDevice0 = casaInteligente0.getDevice("");
      assertEquals(0, casaInteligente0.getNIF());
      assertTrue(smartDevice0.getOn());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(0, casaInteligente1.getNIF());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(".}=4WH*9", 1440, "");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(1440, casaInteligente1.getNIF());
      assertEquals("", casaInteligente1.getNomeFornecedor());
      assertEquals(".}=4WH*9", casaInteligente1.getNome_proprietario());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setLocations((Map<String, Set<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setDevices((Map<String, SmartDevice>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("e@.VQh2}VU* ", 1178, ", Fornecedor = '");
      // Undeclared exception!
      try { 
        casaInteligente0.roomHasDevice("e@.VQh2}VU* ", ", Fornecedor = '");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.addDevice((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CasaInteligente casaInteligente0 = null;
      try {
        casaInteligente0 = new CasaInteligente((CasaInteligente) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("8UN2zOoIHaA#>Xf", (-30), "8UN2zOoIHaA#>Xf");
      casaInteligente0.hasRoom("8UN2zOoIHaA#>Xf");
      assertEquals((-30), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", 1168, "");
      casaInteligente0.addRoom("'Ge");
      boolean boolean0 = casaInteligente0.hasRoom("'Ge");
      assertEquals(1168, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("+V");
      casaInteligente0.getLocations();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getNomeFornecedor();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Uk3?M\".~XHCPg^i\"N_", (-17), "Uk3?M\".~XHCPg^i\"N_");
      HashMap<String, Set<String>> hashMap0 = (HashMap<String, Set<String>>)casaInteligente0.getLocations();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      hashMap0.put("Uk3?M\".~XHCPg^i\"N_", linkedHashSet0);
      CasaInteligente casaInteligente1 = new CasaInteligente("Uk3?M\".~XHCPg^i\"N_", (-17), "Uk3?M\".~XHCPg^i\"N_");
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      casaInteligente0.setLocations(hashMap0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      SmartCamera smartCamera0 = new SmartCamera();
      hashMap0.put(", dWvi'es='", smartCamera0);
      casaInteligente1.setDevices(hashMap0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = new CasaInteligente();
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      casaInteligente1.setNomeFornecedor("R");
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setNIF(2);
      CasaInteligente casaInteligente1 = new CasaInteligente("", 0, "");
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals(2, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertTrue(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("lpoca;{C<.", 51, "lpoca;{C<.");
      boolean boolean0 = casaInteligente0.equals("lpoca;{C<.");
      assertEquals(51, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Uk3?M\".~XHCPg^i\"N_", (-17), "Uk3?M\".~XHCPg^i\"N_");
      boolean boolean0 = casaInteligente0.equals((Object) null);
      assertEquals((-17), casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("e)kzEZ0p~zp3`", 10, "e)kzEZ0p~zp3`");
      boolean boolean0 = casaInteligente0.equals(casaInteligente0);
      assertEquals(10, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      casaInteligente1.setNome_proprietario("e`)kRzEZ0n:~zp3,");
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom(", dWvi'es='");
      casaInteligente0.addToRoom(", dWvi'es='", ", dWvi'es='");
      boolean boolean0 = casaInteligente0.roomHasDevice(", dWvi'es='", ", dWvi'es='");
      assertTrue(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Uk3?M\".~XHCPg^i\"N_", (-17), "Uk3?M\".~XHCPg^i\"N_");
      HashMap<String, Set<String>> hashMap0 = (HashMap<String, Set<String>>)casaInteligente0.getLocations();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      hashMap0.put("Uk3?M\".~XHCPg^i\"N_", linkedHashSet0);
      casaInteligente0.setLocations(hashMap0);
      boolean boolean0 = casaInteligente0.roomHasDevice("Uk3?M\".~XHCPg^i\"N_", "Uk3?M\".~XHCPg^i\"N_");
      assertFalse(boolean0);
      assertEquals((-17), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(", ", 12, ", ");
      casaInteligente0.addRoom("");
      try { 
        casaInteligente0.addRoom("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Esta Divis\u00E3o j\u00E1 existe!
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice smartDevice0 = casaInteligente0.getDevice("?");
      casaInteligente0.addDevice(smartDevice0);
      casaInteligente0.setAllOn(true);
      double double0 = casaInteligente0.getNrHorasDispositivoson();
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals(0.34, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb("je!-$XM>G^Pe*q(6mc", (-23), (-23));
      casaInteligente0.addDevice(smartBulb0);
      casaInteligente0.setOn("je!-$XM>G^Pe*q(6mc", true);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setOn("+_HTX", false);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = casaInteligente0.getDevices();
      SmartBulb smartBulb0 = new SmartBulb("@A`B[", (-1166), (-13.2973922));
      hashMap0.put("@A`B[", smartBulb0);
      casaInteligente0.setDevices(hashMap0);
      boolean boolean0 = casaInteligente0.existsDevice("@A`B[");
      assertEquals(0, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.existsDevice(", dWvi'es='");
      assertFalse(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = casaInteligente0.getDevices();
      SmartBulb smartBulb0 = new SmartBulb("@A`B[", (-1166), (-13.2973922));
      hashMap0.put("@A`B[", smartBulb0);
      casaInteligente0.setDevices(hashMap0);
      HashMap<String, SmartDevice> hashMap1 = casaInteligente0.getDevices();
      assertEquals(0, casaInteligente0.getNIF());
      assertFalse(hashMap1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("e)kzEZ0p~zp3`", 10, "e)kzEZ0p~zp3`");
      // Undeclared exception!
      try { 
        casaInteligente0.addToRoom("org.example.SmartDevice.SmartSpeaker", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (-1917), "CasaInteligente{Nome Propriet\u00E1rio='");
      String string0 = casaInteligente0.getNome_proprietario();
      assertEquals((-1917), casaInteligente0.getNIF());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartCamera smartCamera0 = new SmartCamera("", "MirrorSelector", 4);
      casaInteligente0.addDevice(smartCamera0);
      casaInteligente0.setAllOn(true);
      // Undeclared exception!
      try { 
        casaInteligente0.getNrHorasDispositivoson();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (-1917), "CasaInteligente{Nome Propriet\u00E1rio='");
      // Undeclared exception!
      try { 
        casaInteligente0.setDeviceOn("@Q@ucGp<UE9l=K5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.CasaInteligente.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      int int0 = casaInteligente0.getNIF();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (-1917), "CasaInteligente{Nome Propriet\u00E1rio='");
      String string0 = casaInteligente0.toString();
      assertEquals("CasaInteligente{Nome Propriet\u00E1rio='null', NIF = '-1917', Fornecedor = 'CasaInteligente{Nome Propriet\u00E1rio='', devices='{}', locations='{}'}\n", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (-1917), "CasaInteligente{Nome Propriet\u00E1rio='");
      casaInteligente0.getNrHorasDispositivoson();
      assertEquals((-1917), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("8UN2zOoIHaA#>Xf", (-30), "8UN2zOoIHaA#>Xf");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals((-30), casaInteligente1.getNIF());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Uk3?M\".~XHCPg^i\"N_", (-17), "Uk3?M\".~XHCPg^i\"N_");
      casaInteligente0.getNrDispositivos();
      assertEquals((-17), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("e)kzEZ0p~zp3`", 10, "e)kzEZ0p~zp3`");
      casaInteligente0.setNomeFornecedor((String) null);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      // Undeclared exception!
      try { 
        casaInteligente1.equals(casaInteligente0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
