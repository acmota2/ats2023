/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 15:58:22 GMT 2023
 */

package org.example.SmartDevice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.SmartDevice.SmartSpeaker;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartSpeaker_ESTest extends SmartSpeaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(">");
      smartSpeaker0.volumeUp();
      double double0 = smartSpeaker0.getConsume();
      assertEquals(1, smartSpeaker0.getVolume());
      assertEquals(14.399999999999999, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("");
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      smartSpeaker1.volumeUp();
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertEquals(1, smartSpeaker1.getVolume());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("");
      smartSpeaker0.volumeUp();
      assertEquals(1, smartSpeaker0.getVolume());
      
      smartSpeaker0.volumeDown();
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("zsz>`sLff", 1, "", "hLlM*(K6,G|h}YBuEM");
      int int0 = smartSpeaker0.getVolume();
      assertEquals("", smartSpeaker0.getChannel());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, 1356, (String) null, ", on='");
      String string0 = smartSpeaker0.getChannel();
      assertNull(string0);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("", 20, "", "U-Z 9q9&DDNl`6rCajl");
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals(0.72, smartSpeaker1.getConsume(), 0.01);
      assertEquals("", smartSpeaker1.getChannel());
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("", 0, "", ", volume='");
      smartSpeaker0.turnOn();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals("", smartSpeaker1.getChannel());
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      assertEquals(0, smartSpeaker1.getVolume());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-1715), "`XHOX4!0uXinnf", "`XHOX4!0uXinnf");
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      // Undeclared exception!
      try { 
        smartSpeaker0.equals(smartSpeaker1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.SmartDevice.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = null;
      try {
        smartSpeaker0 = new SmartSpeaker((SmartSpeaker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.SmartDevice.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("^$0?_aK\"zT3k(sE/", (-2719), "^$0?_aK\"zT3k(sE/", "");
      int int0 = smartSpeaker0.getVolume();
      assertEquals("^$0?_aK\"zT3k(sE/", smartSpeaker0.getChannel());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("^$0?_aK\"zT3k(sE/", (-2719), "^$0?_aK\"zT3k(sE/", "");
      String string0 = smartSpeaker0.getChannel();
      assertEquals("^$0?_aK\"zT3k(sE/", string0);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-1715), "`XHOX4!0uXinnf", "`XHOX4!0uXinnf");
      double double0 = smartSpeaker0.getConsume();
      assertEquals(0.0072, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertEquals(0.0072, smartSpeaker1.getConsume(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("z`", 20, "z`", "z`");
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      
      smartSpeaker1.setChannel("SmartSpeaker {id='z`', on='false', volume='19', channel='z`', brand='z`'}");
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("z`", 20, "z`", "z`");
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      smartSpeaker0.volumeDown();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(19, smartSpeaker0.getVolume());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker("sU}lnL8u\"a", 20, "sU}lnL8u\"a", "sU}lnL8u\"a");
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
      assertFalse(boolean0);
      assertEquals(20, smartSpeaker1.getVolume());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals("sU}lnL8u\"a");
      assertFalse(boolean0);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("^$0?_aK\"zT3k(sE/", (-2719), "^$0?_aK\"zT3k(sE/", "");
      boolean boolean0 = smartSpeaker0.equals((Object) null);
      assertEquals("^$0?_aK\"zT3k(sE/", smartSpeaker0.getChannel());
      assertEquals(0, smartSpeaker0.getVolume());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-1715), "`XHOX4!0uXinnf", "`XHOX4!0uXinnf");
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker0);
      assertTrue(boolean0);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (-1715), "`XHOX4!0uXinnf", "`XHOX4!0uXinnf");
      smartSpeaker0.volumeDown();
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("z`", 20, "z`", "z`");
      smartSpeaker0.volumeUp();
      assertEquals(20, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("^$0?_aK\"zT3k(sE/", (-2719), "^$0?_aK\"zT3k(sE/", "");
      String string0 = smartSpeaker0.toString();
      assertEquals("SmartSpeaker {id='^$0?_aK\"zT3k(sE/', on='false', volume='0', channel='^$0?_aK\"zT3k(sE/', brand=''}", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("^$0?_aK\"zT3k(sE/", (-2719), "^$0?_aK\"zT3k(sE/", "");
      assertEquals("^$0?_aK\"zT3k(sE/", smartSpeaker0.getChannel());
      
      smartSpeaker0.setChannel("");
      smartSpeaker0.getChannel();
      assertEquals(0.0072, smartSpeaker0.getConsume(), 0.01);
  }
}
