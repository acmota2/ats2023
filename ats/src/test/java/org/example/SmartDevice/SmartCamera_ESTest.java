/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 16:02:49 GMT 2023
 */

package org.example.SmartDevice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.SmartDevice.SmartCamera;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartCamera_ESTest extends SmartCamera_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = new SmartCamera("", "", (-1447));
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals((-1447), smartCamera1.getSize());
      assertEquals(0, smartCamera0.getSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(", on='", (String) null, 1555);
      int int0 = smartCamera0.getSize();
      assertEquals(1555, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.setSize((-1077));
      int int0 = smartCamera0.getSize();
      assertEquals((-1077), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, (String) null, (-3588));
      smartCamera0.getResolution();
      assertEquals((-3588), smartCamera0.getSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.setResolution("!H^cr#)^0");
      smartCamera0.getResolution();
      assertEquals(0, smartCamera0.getSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(", on='", (String) null, 1555);
      SmartCamera smartCamera1 = smartCamera0.clone();
      assertEquals(1555, smartCamera1.getSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, (String) null, (-3588));
      SmartCamera smartCamera1 = smartCamera0.clone();
      assertEquals((-3588), smartCamera1.getSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.setResolution((String) null);
      // Undeclared exception!
      try { 
        smartCamera0.getConsume();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.SmartDevice.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("1", "1", 1447);
      // Undeclared exception!
      try { 
        smartCamera0.getConsume();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.example.SmartDevice.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartCamera smartCamera0 = null;
      try {
        smartCamera0 = new SmartCamera((SmartCamera) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.SmartDevice.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = new SmartCamera();
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertTrue(boolean0);
      assertEquals(0, smartCamera1.getSize());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      int int0 = smartCamera0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.getResolution();
      assertEquals(0, smartCamera0.getSize());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, (String) null, 0);
      SmartCamera smartCamera1 = new SmartCamera(smartCamera0);
      // Undeclared exception!
      try { 
        smartCamera0.equals(smartCamera1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.SmartDevice.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = new SmartCamera("", "org.example.SmartDevice.SmartDevice", (-186));
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertFalse(boolean0);
      assertEquals(0, smartCamera0.getSize());
      assertEquals((-186), smartCamera1.getSize());
      assertEquals("org.example.SmartDevice.SmartDevice", smartCamera1.getResolution());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = new SmartCamera("5", "5", (-1447));
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(0, smartCamera0.getSize());
      assertEquals((-1447), smartCamera1.getSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      boolean boolean0 = smartCamera0.equals("SmartCamera{id='', on='false', resolution='', size='-1454'}");
      assertEquals(0, smartCamera0.getSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, "org.example.SmartDevice.SmartCamera", 39);
      boolean boolean0 = smartCamera0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(39, smartCamera0.getSize());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      boolean boolean0 = smartCamera0.equals(smartCamera0);
      assertTrue(boolean0);
      assertEquals(0, smartCamera0.getSize());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      String string0 = smartCamera0.toString();
      assertEquals("SmartCamera{id='', on='false', resolution='', size='0'}", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      int int0 = smartCamera0.getConsumption();
      assertEquals(1, int0);
      assertEquals(0, smartCamera0.getSize());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = smartCamera0.clone();
      assertTrue(smartCamera1.equals((Object)smartCamera0));
      assertEquals(0, smartCamera1.getSize());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      // Undeclared exception!
      try { 
        smartCamera0.getConsume();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }
}
